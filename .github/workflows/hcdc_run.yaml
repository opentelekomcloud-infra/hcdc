name: Run HCDC on the PR branch

on:
  pull_request:

jobs:
  get-token:
    runs-on: ubuntu-latest
    env:
      OS_USERNAME: ${{ secrets.OTC_HCDC_USERNAME }}
      OS_PASSWORD: ${{ secrets.OTC_HCDC_PASSWORD }}
      OS_DOMAIN_NAME: ${{ secrets.OTC_HCDC_DOMAIN_NAME }}
      OS_PROJECT_NAME: ${{ secrets.OTC_HCDC_PROJECT_NAME }}
      OS_PROJECT_ID: ${{ secrets.OTC_HCDC_PROJECT_ID }}
      PR_BRANCH: ${{ github.head_ref || github.ref_name }}

    steps:
      - name: Request body
        shell: bash
        run: |
          set -euo pipefail
          cat > body.json <<EOF
          {
            "auth": {
              "identity": {
                "methods": ["password"],
                "password": {
                  "user": {
                    "name": "${OS_USERNAME}",
                    "password": "${OS_PASSWORD}",
                    "domain": { "name": "${OS_DOMAIN_NAME}" }
                  }
                }
              },
              "scope": {
                "project": {
                  "id": "${OS_PROJECT_ID}"
                }
              }
            }
          }
          EOF

      - name: Request token (body-only diagnostics)
        id: token
        shell: bash
        run: |
            set -euo pipefail

            headers=$(mktemp)
            body=$(mktemp)

            code=$(curl -sS -w "%{http_code}" -o "$body" -D "$headers" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            --connect-timeout 10 --max-time 30 --retry 3 --retry-all-errors \
            -X POST "https://iam.eu-de.otc.t-systems.com/v3/auth/tokens" \
            -d @body.json || echo "curl_failed")

            if [[ "$code" == "curl_failed" ]]; then
            # No HTTP response body available; emit a minimal message
            echo "Network error: curl failed before receiving a response body"
            exit 1
            fi

            # Success path: do NOT print headers or body
            if [[ "$code" -ge 200 && "$code" -lt 300 ]]; then
            TOKEN=$(awk -F': ' 'BEGIN{IGNORECASE=1} /^X-Subject-Token/ {gsub("\r","",$2); print $2}' "$headers" || true)
            if [[ -z "${TOKEN:-}" ]]; then
                echo "No X-Subject-Token found"
                exit 1
            fi
            echo "AUTH_TOKEN=$TOKEN" >> "$GITHUB_ENV"
            echo "OS_TOKEN=$TOKEN" >> "$GITHUB_ENV"
            echo "::add-mask::$TOKEN"
            exit 0
            fi

            # Failure path: print ONLY the response body (no headers)
            if command -v jq >/dev/null 2>&1; then
            # Print full JSON body compactly (Keystone errors are JSON)
            jq -c . "$body" || cat "$body"
            else
            cat "$body"
            fi
            exit 1
          

      - name: Run hcdc
        shell: bash
        run: |
          hcdc --branch "$PR_BRANCH"
